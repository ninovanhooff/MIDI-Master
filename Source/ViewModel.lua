---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 22/07/2022 15:15
---

import "CoreLibs/object"

local snd <const> = playdate.sound

local justPressed <const> = playdate.buttonJustPressed
-- local justReleased <const> = playdate.buttonJustReleased
local buttonDown <const> = playdate.kButtonDown
local buttonUp <const> = playdate.kButtonUp
--local buttonLeft <const> = playdate.kButtonLeft
--local buttonRight <const> = playdate.kButtonRight
--local buttonA <const> = playdate.kButtonA
--local buttonB <const> = playdate.kButtonB

class("ViewModel").extends()

function ViewModel:init(sequence)
    self.sequence = sequence
    self.numTracks = sequence:getTrackCount()
    self.trackProps = {}
    for i = 1, self.numTracks do
        local synth
        if i == 10 then
            synth = "drums"
        else
            synth = snd.kWaveSawtooth
        end
        self.trackProps[i] = {
            isMuted = false,
            synth = synth
        }
    end
    self.selectedIdx = 1
end

function ViewModel:trackName(idx)
    local synth = self.trackProps[idx].synth
    return string.format("%s : ", idx) .. synthNames[synth]
end

function ViewModel:getTrack(trackNum)
    return self.sequence:getTrackAtIndex(trackNum)
end

function ViewModel:isMuted(trackNum)
    return self.trackProps[trackNum].isMuted
end

function ViewModel:setMuted(trackNum, muted)
    self.trackProps[trackNum].isMuted = muted
    self:getTrack(trackNum):setMuted(muted)
end

function ViewModel:toggleMuted(trackNum)
    local isMuted = self:isMuted(trackNum)
    self:setMuted(trackNum, not isMuted)
end

function ViewModel:update()
    if justPressed(buttonDown) and self.selectedIdx < self.numTracks then
        self.selectedIdx = self.selectedIdx + 1
    elseif justPressed(buttonUp) and self.selectedIdx > 1 then
        self.selectedIdx = self.selectedIdx - 1
    end
end

function ViewModel:keyReleased(key)
    if key == "m" then
        self:toggleMuted(self.selectedIdx)
    end
end
